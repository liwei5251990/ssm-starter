################################################### 全局配置 ###################################################
# 输出目录
generator.outputDir = D:\\generate
# 是否覆盖文件
generator.fileOverride = true
# 不需要 ActiveRecord 特性的可以改为 false
generator.activeRecord = true
# XML 二级缓存
generator.enableCache = false
# XML ResultMap
generator.baseResultMap = true
# XML columnList
generator.baseColumnList = false
# 作者
generator.author = nekolr
# 全局 service 接口名，此处的配置会去掉开头的 I
generator.serviceName = %sService
# 全局 entity 名，此处的配置会生成表名
generator.entityName =
# 主键策略
generator.idType = ID_WORKER

################################################### 数据源配置 ###################################################
# 数据库类型
generator.dbType = MYSQL
# 驱动全限定名
generator.driverName = com.mysql.jdbc.Driver
# 用户名
generator.username = OHcy78fm44CN1UjPTTPkoQ==
# 密码
generator.password = OHcy78fm44CN1UjPTTPkoQ==
# URL
generator.url = jdbc:mysql://127.0.0.1:3306/upms?useUnicode=true&characterEncoding=utf-8&useSSL=false

################################################### 生成策略 ###################################################
# 表大写命名
generator.capitalMode = false
# 表名前缀
generator.tablePrefix =
# 表名生成策略
generator.naming = nochange
# 列名生成策略
generator.columnNaming = underline_to_camel
# 需要生成的表
generator.include =
# 需要排除的表
generator.exclude =
# 自定义的实体父类
generator.superEntityClass =
# 自定义的实体父类公共字段
generator.superEntityColumns =
# 自定义 mapper 父类
generator.superMapperClass =
# 自定义 service 父类
generator.superServiceClass =
# 自定义 service 实现父类
generator.superServiceImplClass =
# 自定义 controller 父类
generator.superControllerClass =
# 是否生成字段常量
# 比如：public static final String JSESSIONID = "JSESSIONID_0";
generator.entityColumnConstant = false
# 是否为构建者模型
# 比如：public User setName(String name) {this.name = name; return this;}
generator.entityBuilderModel = false
# 是否使用 lombok
generator.entityLombokModel = false
# 自动生成注解
generator.entityTableFieldAnnotationEnable = true
# REST 注解
generator.restControllerStyle = true

################################################### 包配置 ###################################################
# 基本包名
generator.parent = com.nekolr
# 模块名
generator.moduleName = upms
# 自定义的 controller 包名
generator.controller = server.controller
# 自定义的 service 包名
generator.service = api.rpc
# 自定义的 service impl 包名
generator.serviceImpl = provider.service
# 自定义的 mapper 包名
generator.mapper = provider.dao
# 自定义的 mapper xml 包名
generator.xml = provider.dao.mapper
# 自定义的 entity 包名
generator.entity = api.entity

################################################### 自定义配置 ###################################################
# 是否在 service 中生成 dto 接口和实现方法
generator.addDtoInterfaceAndImpl = true
# dto 所在包名
generator.dtoPackageName = com.nekolr.upms.api.dto